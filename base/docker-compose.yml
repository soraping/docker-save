version: '3.8'

services:

  nginx:
    image: nginx:latest
    # restart: always
    privileged: true
    container_name: nginx
    ports:
      - 5173:5173
      - 8443:443
    volumes:
      - /Users/caoping/www/docker/docker-file/base/nginx/html:/etc/nginx/html
      - /Users/caoping/www/docker/docker-file/base/nginx/www:/var/www
      - /Users/caoping/www/docker/docker-file/base/nginx/nginx.conf/:/etc/nginx/nginx.conf
      - /Users/caoping/www/docker/docker-file/base/nginx/cert:/etc/nginx/cert
      - /Users/caoping/www/docker/docker-file/base/nginx/conf.d:/etc/nginx/conf.d
      - /Users/caoping/www/docker/docker-file/base/nginx/logs:/var/log/nginx
    environment:
      - NGINX_PORT=80
      - TZ=Asia/Shanghai

  openresty:
    image: openresty/openresty:latest
    container_name: openresty
    privileged: true
    ports:
      - 8000:8000
    volumes:
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/html:/etc/nginx/html
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/www:/var/www
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/nginx.conf/:/etc/nginx/nginx.conf
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/cert:/etc/nginx/cert
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/conf.d:/etc/nginx/conf.d
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/logs:/var/log/nginx
      - /Users/caoping/www/docker/docker-file/base/openresty/nginx/lua:/usr/local/openresty/nginx/lua
    environment:
      - NGINX_PORT=80
      - TZ=Asia/Shanghai

  tools:
    image: ghcr.io/corentinth/it-tools:latest
    container_name: tools
    privileged: true
    # restart: always
    environment:
      TZ: Asia/Shanghai
    ports:
      - 8001:80 
  
  neonlink:
    image: alexscifier/neonlink:latest
    container_name: neonlink
    privileged: true
    network_mode: bridge
    ports:
      - "3333:3333"
    environment:
      FASTIFY_PLUGIN_TIMEOUT: 120000
    volumes:
      - ./neonlink/data:/app/data
      - ./neonlink/background:/app/public/static/media/background


  mysql8:
    image: mysql:latest
    # restart: always
    networks:
      - tools
    privileged: true
    container_name: mysql
    ports:
      - 8306:3306
    volumes:
      - /Users/caoping/www/docker/docker-file/base/mysql8/data:/var/lib/mysql
      - /Users/caoping/www/docker/docker-file/base/mysql8/conf:/etc/mysql/conf.d
      - /Users/caoping/www/docker/docker-file/base/mysql8/my.cnf:/etc/mysql/my.cnf
      - /Users/caoping/www/docker/docker-file/base/mysql8/logs:/var/log/mysql
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456


  mysql57:
    image: mysql:5.7.30
    # restart: always
    networks:
      - tools
      - external_net
    privileged: true
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - /Users/caoping/www/docker/docker-file/base/mysql57/data:/var/lib/mysql
      - /Users/caoping/www/docker/docker-file/base/mysql57/conf:/etc/mysql/conf.d
      - /Users/caoping/www/docker/docker-file/base/mysql57/my.cnf:/etc/mysql/my.cnf
      - /Users/caoping/www/docker/docker-file/base/mysql57/logs:/var/log/mysql
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456


  redis:
    image: redis:latest
    # restart: always
    networks:
      - tools
      - external_net
    privileged: true
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - /Users/caoping/www/docker/docker-file/base/redis/data:/data
      - /Users/caoping/www/docker/docker-file/base/redis/redis.conf:/etc/redis/redis.conf

    command: redis-server /etc/redis/redis.conf

    # command: /bin/bash -c "mkdir /dockerData; chown -R 1000 /dockerData"


  nacos:
    # restart: always
    image: nacos/nacos-server:v2.3.2
    container_name: nacos
    ports:
      - 8848:8848
      - 9848:9848
      - 9849:9849

    privileged: true
    depends_on:
      - mysql57
    networks:
      - tools
    environment:
      # 集群配置
      # MODE: cluster
      # NACOS_SERVERS: nacos-server01:8848 nacos-server02:8848 nacos-server03:8848

      # 单机
      MODE: standalone

      # 副本
      NACOS_REPLICAS: 1
      PREFER_HOST_MODE: hostname

      # 个人安全配置
      NACOS_AUTH_ENABLE: "true"
      NACOS_AUTH_TOKEN_EXPIRE_SECONDS: 18000
      NACOS_AUTH_TOKEN: NStQdHM3WCU3RVYlMjRZdG04aUolMkM3JTJDQnhyUCU1RXFMJTIxaiUyOCUyM1JZ
      NACOS_AUTH_IDENTITY_KEY: tianji
      NACOS_AUTH_IDENTITY_VALUE: tianji

      # 账号密码
      NACOS_AUTH_SYSTEM_TYPE: nacos

      # 虚拟机设置
      JVM_XMS: 128m
      JVM_XMX: 128m
      JVM_MS: 64m
      JVM_MMS: 64m

      # 存储
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      MYSQL_SERVICE_DB_NAME: nacos_config
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=10000&socketTimeout=30000&autoReconnect=true&useSSL=false
    volumes:
      - /Users/caoping/www/docker/docker-file/base/nacos/logs:/home/nacos/logs
      - /Users/caoping/www/docker/docker-file/base/nacos/init.d:/home/nacos/init.d
      - /Users/caoping/www/docker/docker-file/base/nacos/data:/home/nacos/data


  rnacos:
    image: qingpan/rnacos:v0.6.4
    container_name: rnacos
    network_mode: "host"
    # restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
      - "10848:10848"
    volumes:
      - /home/docker/nacos/io:/io:rw
    environment:
      - TZ=Asia/Shanghai
      - RNACOS_INIT_ADMIN_USERNAME=nacos
      - RNACOS_INIT_ADMIN_PASSWORD=nacos
      - RNACOS_HTTP_PORT=8848

      # # 集群配置
      # # 主节点为1
      # - RNACOS_RAFT_NODE_ID=1
      # - RNACOS_RAFT_NODE_ADDR=127.0.0.1:9848
      # # 从节点需要配置需要加入的主节点地址
      # - RNACOS_RAFT_JOIN_ADDR=r-nacos-master:9848


  # docker-registry
  registry:
    image: registry
    # restart: always
    networks:
      - tools
    privileged: true
    container_name: registry
    ports:
      - 5000:5000
    environment:
      - REGISTRY_AUTH=htpasswd
      #相对于数据卷auth的路径，不要写宿主机全路径
      - REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
      - REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm
      - REGISTRY_STORAGE_DELETE_ENABLED=true
    volumes:
      - /Users/caoping/www/docker/docker-file/base/registry/config.yml:/etc/docker/registry/config.yml
      - /Users/caoping/www/docker/docker-file/base/registry/auth:/auth
      - /Users/caoping/www/docker/docker-file/base/registry/data:/var/lib/registry

  mongo:
    image: mongo:4.2
    container_name: mongo
    volumes:
      - /home/mydata/mongo/data:/data/db
    restart: always
    ports:
      - 27017:27017
      

networks:
  es_net:
    driver: bridge
  tools:
    driver: bridge
  external_net:
    name: app_net
    external: true
